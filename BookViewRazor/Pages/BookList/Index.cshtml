@page
@model BookViewRazor.IndexModel
@{
    ViewData["Title"] = "Index";
}

<!-- with what we have done in the index.cshtml.cs, we already have a list of Book to display-->
<br />
<div class="container row p-0 m-0">
    <div class="col-6">
        <h2 class="text-info">Book List</h2>
    </div>
    <div class="col-3">
        <a asp-page="Create" class="btn btn-info form-control text-white">Create New Book</a>
    </div>
    <div class="col-3">
        <a asp-page="Upset" class="btn btn-info form-control text-white">Add (Upset) New Book</a>
    </div>

    <div class="col-12 border p-3 mt-3">
        <form method="post">
            <!--Razor Syntax is as follows-->
            @if (Model.Books.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            <!--This line of code below is a typical example of tag helper-->
                            <label asp-for="Books.FirstOrDefault().Name"></label>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(m => m.Books.FirstOrDefault().Author)*@
                            <label asp-for="Books.FirstOrDefault().Author"></label>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(m => m.Books.FirstOrDefault().Author)*@
                            <label asp-for="Books.FirstOrDefault().ISBN"></label>
                        </th>
                        <th>
                            @* Heading of this column is intentionally left empty *@
                        </th>
                    </tr>
                    @* we then display all of the records using a forecah loop *@
                    @foreach (var item in Model.Books)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Author)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.ISBN)
                            </td>
                            <td>
                                <a asp-page="Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm text-white">Edit</a>
                                <button asp-page-handler="Delete" asp-route-id="@item.Id" onclick="return confirm('Are you sure you want to delete this Book?');" class="btn btn-danger btn-sm">Delete</button>
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <p>No Books available.</p>
            }
        </form>
    </div>


    @* The Option Below make you of Data table to sort and search for Data  *@
    <div class="col-12" style="text-align:center">
        <br />
        <span class="h3 text-info">OR</span>
        <br /><br />
    </div>


    <div class="col-12 border p-3">
        <table id="DT_load" class="table table-striped table-bordered" style="width: 100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Author</th>
                    <th>ISBN</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@* Including a JavaScript file in the html page  *@
@section Scripts{ 
    <script src="~/js/BookList.js"></script>
}

